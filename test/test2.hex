00 06  00 00 06  00 00 00 # jmp line #6 -----+		# zero line
00 00  00 00 00  00 00 00 # A = 0            |		# 1st line
00 00  00 00 00  00 00 Ff # B = 255          |		# 2nd line
00 00  00 00 00  00 00 01 # C = 1            |		# 3rd line
00 00  00 00 00  00 00 20 # D = 32           |		# ...
00 00  00 00 00  00 00 06 # addr1 = 6        |
00 09  00 00 02  00 00 00 # write B uint <---+ <-------------+
00 09  00 00 04  00 00 03 # write D char                     |
00 02  00 00 01  00 00 03 # A += C                           |
00 07  00 00 05  00 00 00 # stack.push(addr1)                |
00 1A  00 00 02  00 00 06 # LOOP: if B !=0 then B-=1;jmp 6 --+
FF FF  FF FF FF  FF FF FF # END PROGRAM 
#
# result: all digits 0 - 255
#
#	41   A 	|	4e   N
#	42   B 	|	4f   O
#	43   C 	|	50   P
#	44   D 	|	51   Q
#	45   E 	|	52   R
#	46   F 	|	53   S
#	47   G 	|	54   T
#	48   H 	|	55   U
#	49   I 	|	56   V
#	4a   J 	|	57   W
#	4b   K 	|	58   X
#	4c   L 	|	59   Y
#	4d   M 	|	5a   Z
#
#	61   a 	|	6e   n
#	62   b 	|	6f   o
#	63   c 	|	70   p
#	64   d 	|	71   q
#	65   e 	|	72   r
#	66   f 	|	73   s
#	67   g 	|	74   t
#	68   h 	|	75   u
#	69   i 	|	76   v
#	6a   j 	|	77   w
#	6b   k 	|	78   x
#	6c   l 	|	79   y
#	6d   m 	|	7a   z
#
#	2c   ,	|	2e   .
#	21   !	|	3f   ?
