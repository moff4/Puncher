00 06  00 00 06  00 00 00 # jmp line #6 -----+		# zero line
00 00  00 00 00  00 00 00 # A := 0           |		# 1st line
00 00  00 00 00  00 00 Ff # B := 255         |		# 2nd line
00 00  00 00 00  00 00 01 # C := 1           |		# 3rd line
00 00  00 00 00  00 00 20 # D := 32          |		# ...
00 00  00 00 00  00 00 06 # addr1 := 6       |
00 09  00 00 02  00 00 00 # write B uint <---+ <-------------+
00 09  00 00 04  00 00 03 # write D char                     |
00 02  00 00 01  00 00 03 # A += C                           |
00 07  00 00 05  00 00 00 # stack.push(addr1)                |
00 1A  00 00 02  00 00 06 # LOOP: if B !=0 then B-=1;jmp 6 --+
FF FF  FF FF FF  FF FF FF # END PROGRAM 
#
# result: all digits from 255 to 0
#
# ASCII: (hex,char)
#	41   A 	|	4e   N		||	61   a 	|	6e   n		||	2c   , 	|	39   9
#	42   B 	|	4f   O		||	62   b 	|	6f   o		||	2e   . 	|	
#	43   C 	|	50   P		||	63   c 	|	70   p		||	21   ! 	|	
#	44   D 	|	51   Q		||	64   d 	|	71   q		||	3f   ? 	|	
#	45   E 	|	52   R		||	65   e 	|	72   r		||	30   0 	|	
#	46   F 	|	53   S		||	66   f 	|	73   s		||	31   1 	|	
#	47   G 	|	54   T		||	67   g 	|	74   t		||	32   2 	|	
#	48   H 	|	55   U		||	68   h 	|	75   u		||	33   3 	|	
#	49   I 	|	56   V		||	69   i 	|	76   v		||	34   4 	|	
#	4a   J 	|	57   W		||	6a   j 	|	77   w		||	35   5 	|	
#	4b   K 	|	58   X		||	6b   k 	|	78   x		||	36   6 	|	
#	4c   L 	|	59   Y		||	6c   l 	|	79   y		||	37   7 	|	
#	4d   M 	|	5a   Z		||	6d   m 	|	7a   z		||	38   8 	|	
#



